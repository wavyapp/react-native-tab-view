{"version":3,"names":["React","StyleSheet","Keyboard","InteractionManager","Animated","event","divide","onChange","cond","eq","round","call","Value","ScrollPager","Component","constructor","args","_defineProperty","x","props","navigationState","index","layout","width","y","createRef","key","wasTouched","keyboardDismissMode","onIndexChange","routes","findIndex","route","scrollTo","dismiss","animated","scrollViewRef","current","_this$scrollViewRef$c","_this$scrollViewRef$c2","scrollView","getNode","type","listener","enterListeners","push","indexOf","splice","nativeEvent","contentOffset","position","layoutWidthNode","componentDidMount","componentDidUpdate","prevProps","offset","length","setValue","componentWillUnmount","interactionHandle","clearInteractionHandle","render","children","onSwipeStart","onSwipeEnd","overscroll","handleSwipeStart","createInteractionHandle","handleSwipeEnd","relativePosition","addListener","removeListener","jumpTo","createElement","ScrollView","pagingEnabled","directionalLockEnabled","keyboardShouldPersistTaps","overScrollMode","scrollToOverflowEnabled","scrollEnabled","swipeEnabled","automaticallyAdjustContentInsets","bounces","scrollsToTop","showsHorizontalScrollIndicator","scrollEventThrottle","onScroll","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollEnd","initialOffset","style","styles","container","contentContainerStyle","flexDirection","flex","ref","Code","exec","create"],"sources":["ScrollPager.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Keyboard, InteractionManager } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { Props } from './Pager';\nimport { Route, Listener } from './types';\n\nconst { event, divide, onChange, cond, eq, round, call, Value } = Animated;\n\ntype State = {\n  initialOffset: { x: number; y: number };\n};\n\nexport default class ScrollPager<T extends Route> extends React.Component<\n  Props<T> & { overscroll?: boolean },\n  State\n> {\n  static defaultProps = {\n    bounces: true,\n  };\n\n  componentDidMount() {\n    if (this.props.layout.width) {\n      this.scrollTo(\n        this.props.navigationState.index * this.props.layout.width,\n        false\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<T>) {\n    const offset = this.props.navigationState.index * this.props.layout.width;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        this.props.navigationState.routes.length ||\n      prevProps.layout.width !== this.props.layout.width\n    ) {\n      this.scrollTo(offset, false);\n    } else if (\n      prevProps.navigationState.index !== this.props.navigationState.index\n    ) {\n      this.scrollTo(offset);\n    }\n\n    if (prevProps.layout.width !== this.props.layout.width) {\n      this.layoutWidthNode.setValue(this.props.layout.width);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.interactionHandle !== null) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n    }\n  }\n\n  private initialOffset = {\n    x: this.props.navigationState.index * this.props.layout.width,\n    y: 0,\n  };\n\n  private wasTouched: boolean = false;\n\n  // InteractionHandle to handle tasks around animations\n  private interactionHandle: number | null = null;\n\n  private scrollViewRef = React.createRef<Animated.ScrollView>();\n\n  private jumpTo = (key: string) => {\n    this.wasTouched = false;\n    const { navigationState, keyboardDismissMode, onIndexChange } = this.props;\n\n    const index = navigationState.routes.findIndex(\n      (route) => route.key === key\n    );\n\n    if (navigationState.index === index) {\n      this.scrollTo(index * this.props.layout.width);\n    } else {\n      onIndexChange(index);\n      if (keyboardDismissMode === 'auto') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private scrollTo = (x: number, animated = true) => {\n    if (this.scrollViewRef.current) {\n      // getNode() is not necessary in newer versions of React Native\n      const scrollView =\n        // @ts-ignore\n        typeof this.scrollViewRef.current?.scrollTo === 'function'\n          ? this.scrollViewRef.current\n          : this.scrollViewRef.current?.getNode();\n\n      // @ts-ignore\n      scrollView?.scrollTo({\n        x,\n        animated: animated,\n      });\n    }\n  };\n\n  private enterListeners: Listener[] = [];\n\n  private addListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter':\n        this.enterListeners.push(listener);\n        break;\n    }\n  };\n\n  private removeListener = (type: 'enter', listener: Listener) => {\n    switch (type) {\n      case 'enter': {\n        const index = this.enterListeners.indexOf(listener);\n\n        if (index > -1) {\n          this.enterListeners.splice(index, 1);\n        }\n\n        break;\n      }\n    }\n  };\n\n  private position = new Animated.Value(\n    this.props.navigationState.index * this.props.layout.width\n  );\n\n  private onScroll = event([\n    {\n      nativeEvent: {\n        contentOffset: {\n          x: this.position,\n        },\n      },\n    },\n  ]);\n\n  private layoutWidthNode = new Value(this.props.layout.width);\n\n  private relativePosition = divide(this.position, this.layoutWidthNode);\n\n  render() {\n    const {\n      children,\n      layout,\n      onSwipeStart,\n      onSwipeEnd,\n      overscroll,\n      onIndexChange,\n      navigationState,\n    } = this.props;\n\n    const handleSwipeStart = () => {\n      this.wasTouched = false;\n      onSwipeStart?.();\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    };\n\n    const handleSwipeEnd = () => {\n      this.wasTouched = true;\n      onSwipeEnd?.();\n      if (this.interactionHandle !== null) {\n        InteractionManager.clearInteractionHandle(this.interactionHandle);\n      }\n    };\n\n    return children({\n      position: this.relativePosition,\n      addListener: this.addListener,\n      removeListener: this.removeListener,\n      jumpTo: this.jumpTo,\n      render: (children) => (\n        <Animated.ScrollView\n          pagingEnabled\n          directionalLockEnabled\n          keyboardDismissMode=\"on-drag\"\n          keyboardShouldPersistTaps=\"always\"\n          overScrollMode=\"never\"\n          scrollToOverflowEnabled\n          scrollEnabled={this.props.swipeEnabled}\n          automaticallyAdjustContentInsets={false}\n          bounces={overscroll}\n          scrollsToTop={false}\n          showsHorizontalScrollIndicator={false}\n          scrollEventThrottle={1}\n          onScroll={this.onScroll}\n          onScrollBeginDrag={handleSwipeStart}\n          onScrollEndDrag={handleSwipeEnd}\n          onMomentumScrollEnd={this.onScroll}\n          contentOffset={this.initialOffset}\n          style={styles.container}\n          contentContainerStyle={\n            layout.width\n              ? {\n                  flexDirection: 'row',\n                  width: layout.width * navigationState.routes.length,\n                  flex: 1,\n                }\n              : null\n          }\n          ref={this.scrollViewRef}\n        >\n          {children}\n          <Animated.Code\n            exec={onChange(\n              this.relativePosition,\n              cond(eq(round(this.relativePosition), this.relativePosition), [\n                call([this.relativePosition], ([relativePosition]) => {\n                  if (this.wasTouched) {\n                    onIndexChange(relativePosition);\n                    this.wasTouched = false;\n                  }\n                }),\n              ])\n            )}\n          />\n        </Animated.ScrollView>\n      ),\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]}