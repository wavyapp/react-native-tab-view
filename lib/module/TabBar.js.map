{"version":3,"names":["React","StyleSheet","View","I18nManager","Platform","Animated","TabBarItem","TabBarIndicator","memoize","scheduleInNextFrame","cb","frame","requestAnimationFrame","cancelAnimationFrame","TabBar","Component","constructor","args","_defineProperty","layout","width","height","tabWidths","Value","createRef","undefined","style","tabStyle","flatten","index","routes","scrollEnabled","flattenedWidth","key","endsWith","parseFloat","Number","isFinite","length","i","getComputedTabWidth","tabBarWidth","layoutWidth","props","state","navigationState","reduce","acc","_","getFlattenedTabWidth","value","getTabBarWidth","maxDistance","getMaxScrollDistance","scrollValue","Math","max","min","OS","isRTL","centerDistance","Array","from","total","tabWidth","scrollAmount","normalizeScrollValue","_this$scrollViewRef$c","_this$scrollViewRef$c2","scrollView","scrollViewRef","current","scrollTo","getNode","x","getScrollAmount","animated","e","_this$cancelNextFrame","nativeEvent","cancelNextFrameCb","call","setState","maxScrollDistance","multiply","sub","componentDidUpdate","prevProps","prevState","every","r","resetScroll","componentWillUnmount","_this$cancelNextFrame2","render","position","jumpTo","bounces","getAccessibilityLabel","getAccessible","getLabelText","getTestID","renderBadge","renderIcon","renderLabel","renderTabBarItem","activeColor","inactiveColor","pressColor","pressOpacity","onTabPress","onTabLongPress","labelStyle","indicatorStyle","contentContainerStyle","indicatorContainerStyle","isWidthDynamic","tabBarWidthPercent","translateX","getTranslateX","createElement","onLayout","handleLayout","styles","tabBar","pointerEvents","indicatorContainer","transform","renderIndicator","getTabWidth","getMemoizedTabWidthGettter","scroll","ScrollView","horizontal","accessibilityRole","keyboardShouldPersistTaps","alwaysBounceHorizontal","scrollsToTop","showsHorizontalScrollIndicator","automaticallyAdjustContentInsets","overScrollMode","tabContent","container","scrollEventThrottle","onScroll","event","contentOffset","ref","map","route","measuredTabWidths","onPress","defaultPrevented","preventDefault","onLongPress","title","toUpperCase","accessible","accessibilityLabel","testID","create","flex","overflow","select","default","web","backgroundColor","elevation","shadowColor","shadowOpacity","shadowRadius","hairlineWidth","shadowOffset","zIndex","flexDirection","flexWrap","top","left","right","bottom"],"sources":["TabBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n  LayoutChangeEvent,\n  I18nManager,\n  Platform,\n} from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport TabBarItem, { Props as TabBarItemProps } from './TabBarItem';\nimport TabBarIndicator, { Props as IndicatorProps } from './TabBarIndicator';\nimport memoize from './memoize';\nimport {\n  Route,\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  Event,\n} from './types';\n\nexport type Props<T extends Route> = SceneRendererProps & {\n  navigationState: NavigationState<T>;\n  scrollEnabled?: boolean;\n  bounces?: boolean;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderIcon?: (\n    scene: Scene<T> & {\n      focused: boolean;\n      color: string;\n    }\n  ) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  renderIndicator: (props: IndicatorProps<T>) => React.ReactNode;\n  renderTabBarItem?: (\n    props: TabBarItemProps<T> & { key: string }\n  ) => React.ReactElement;\n  onTabPress?: (scene: Scene<T> & Event) => void;\n  onTabLongPress?: (scene: Scene<T>) => void;\n  tabStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  indicatorContainerStyle?: StyleProp<ViewStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype State = {\n  layout: Layout;\n  tabWidths: { [key: string]: number };\n};\n\nconst scheduleInNextFrame = (cb: () => void) => {\n  let frame = requestAnimationFrame(() => {\n    frame = requestAnimationFrame(cb);\n  });\n\n  return () => cancelAnimationFrame(frame);\n};\n\nexport default class TabBar<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static defaultProps = {\n    getLabelText: ({ route }: Scene<Route>) =>\n      typeof route.title === 'string' ? route.title.toUpperCase() : route.title,\n    getAccessible: ({ route }: Scene<Route>) =>\n      typeof route.accessible !== 'undefined' ? route.accessible : true,\n    getAccessibilityLabel: ({ route }: Scene<Route>) =>\n      typeof route.accessibilityLabel === 'string'\n        ? route.accessibilityLabel\n        : typeof route.title === 'string'\n        ? route.title\n        : undefined,\n    getTestID: ({ route }: Scene<Route>) => route.testID,\n    renderIndicator: (props: IndicatorProps<Route>) => (\n      <TabBarIndicator {...props} />\n    ),\n  };\n\n  state: State = {\n    layout: { width: 0, height: 0 },\n    tabWidths: {},\n  };\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    const { navigationState } = this.props;\n    const { layout, tabWidths } = this.state;\n\n    if (\n      prevProps.navigationState.routes.length !==\n        navigationState.routes.length ||\n      prevProps.navigationState.index !== navigationState.index ||\n      prevState.layout.width !== layout.width ||\n      prevState.tabWidths !== tabWidths\n    ) {\n      if (\n        this.getFlattenedTabWidth(this.props.tabStyle) === 'auto' &&\n        !(\n          layout.width &&\n          navigationState.routes.every(\n            (r) => typeof tabWidths[r.key] === 'number'\n          )\n        )\n      ) {\n        // When tab width is dynamic, only adjust the scroll once we have all tab widths and layout\n        return;\n      }\n\n      this.resetScroll(navigationState.index);\n    }\n  }\n\n  componentWillUnmount() {\n    this.cancelNextFrameCb?.();\n  }\n\n  // to store the layout.width of each tab\n  // when all onLayout's are fired, this would be set in state\n  private measuredTabWidths: { [key: string]: number } = {};\n\n  private scrollAmount = new Animated.Value(0);\n\n  private scrollViewRef = React.createRef<Animated.ScrollView>();\n\n  private cancelNextFrameCb: (() => void) | undefined = undefined;\n\n  private getFlattenedTabWidth = (style: StyleProp<ViewStyle>) => {\n    const tabStyle = StyleSheet.flatten(style);\n\n    return tabStyle ? tabStyle.width : undefined;\n  };\n\n  private getComputedTabWidth = (\n    index: number,\n    layout: Layout,\n    routes: Route[],\n    scrollEnabled: boolean | undefined,\n    tabWidths: { [key: string]: number },\n    flattenedWidth: string | number | undefined\n  ) => {\n    if (flattenedWidth === 'auto') {\n      return tabWidths[routes[index].key] || 0;\n    }\n\n    switch (typeof flattenedWidth) {\n      case 'number':\n        return flattenedWidth;\n      case 'string':\n        if (flattenedWidth.endsWith('%')) {\n          const width = parseFloat(flattenedWidth);\n          if (Number.isFinite(width)) {\n            return layout.width * (width / 100);\n          }\n        }\n    }\n\n    if (scrollEnabled) {\n      return (layout.width / 5) * 2;\n    }\n\n    return layout.width / routes.length;\n  };\n\n  private getMemoizedTabWidthGettter = memoize(\n    (\n      layout: Layout,\n      routes: Route[],\n      scrollEnabled: boolean | undefined,\n      tabWidths: { [key: string]: number },\n      flattenedWidth: string | number | undefined\n    ) => (i: number) =>\n      this.getComputedTabWidth(\n        i,\n        layout,\n        routes,\n        scrollEnabled,\n        tabWidths,\n        flattenedWidth\n      )\n  );\n\n  private getMaxScrollDistance = (tabBarWidth: number, layoutWidth: number) =>\n    tabBarWidth - layoutWidth;\n\n  private getTabBarWidth = (props: Props<T>, state: State) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    return routes.reduce<number>(\n      (acc, _, i) =>\n        acc +\n        this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        ),\n      0\n    );\n  };\n\n  private normalizeScrollValue = (\n    props: Props<T>,\n    state: State,\n    value: number\n  ) => {\n    const { layout } = state;\n    const tabBarWidth = this.getTabBarWidth(props, state);\n    const maxDistance = this.getMaxScrollDistance(tabBarWidth, layout.width);\n    const scrollValue = Math.max(Math.min(value, maxDistance), 0);\n\n    if (Platform.OS === 'android' && I18nManager.isRTL) {\n      // On Android, scroll value is not applied in reverse in RTL\n      // so we need to manually adjust it to apply correct value\n      return maxDistance - scrollValue;\n    }\n\n    return scrollValue;\n  };\n\n  private getScrollAmount = (props: Props<T>, state: State, index: number) => {\n    const { layout, tabWidths } = state;\n    const { scrollEnabled, tabStyle } = props;\n    const { routes } = props.navigationState;\n\n    const centerDistance = Array.from({ length: index + 1 }).reduce<number>(\n      (total, _, i) => {\n        const tabWidth = this.getComputedTabWidth(\n          i,\n          layout,\n          routes,\n          scrollEnabled,\n          tabWidths,\n          this.getFlattenedTabWidth(tabStyle)\n        );\n\n        // To get the current index centered we adjust scroll amount by width of indexes\n        // 0 through (i - 1) and add half the width of current index i\n        return total + (index === i ? tabWidth / 2 : tabWidth);\n      },\n      0\n    );\n\n    const scrollAmount = centerDistance - layout.width / 2;\n\n    return this.normalizeScrollValue(props, state, scrollAmount);\n  };\n\n  private resetScroll = (index: number) => {\n    if (this.props.scrollEnabled) {\n      // getNode() is not necessary in newer versions of React Native\n      const scrollView =\n        // @ts-ignore\n        typeof this.scrollViewRef.current?.scrollTo === 'function'\n          ? this.scrollViewRef.current\n          : this.scrollViewRef.current?.getNode();\n\n      // @ts-ignore\n      scrollView?.scrollTo({\n        x: this.getScrollAmount(this.props, this.state, index),\n        animated: true,\n      });\n    }\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    // If we don't delay this state update, the UI gets stuck in weird state\n    // Maybe an issue in Reanimated?\n    // https://github.com/satya164/react-native-tab-view/issues/877\n    // Cancel any pending callbacks, since we're scheduling a new one\n    this.cancelNextFrameCb?.();\n    this.cancelNextFrameCb = scheduleInNextFrame(() =>\n      this.setState({\n        layout: {\n          height,\n          width,\n        },\n      })\n    );\n  };\n\n  private getTranslateX = memoize(\n    (scrollAmount: Animated.Node<number>, maxScrollDistance: number) =>\n      Animated.multiply(\n        Platform.OS === 'android' && I18nManager.isRTL\n          ? Animated.sub(maxScrollDistance, scrollAmount)\n          : scrollAmount,\n        I18nManager.isRTL ? 1 : -1\n      )\n  );\n\n  render() {\n    const {\n      position,\n      navigationState,\n      jumpTo,\n      scrollEnabled,\n      bounces,\n      getAccessibilityLabel,\n      getAccessible,\n      getLabelText,\n      getTestID,\n      renderBadge,\n      renderIcon,\n      renderLabel,\n      renderTabBarItem,\n      activeColor,\n      inactiveColor,\n      pressColor,\n      pressOpacity,\n      onTabPress,\n      onTabLongPress,\n      tabStyle,\n      labelStyle,\n      indicatorStyle,\n      contentContainerStyle,\n      style,\n      indicatorContainerStyle,\n    } = this.props;\n    const { layout, tabWidths } = this.state;\n    const { routes } = navigationState;\n\n    const isWidthDynamic = this.getFlattenedTabWidth(tabStyle) === 'auto';\n    const tabBarWidth = this.getTabBarWidth(this.props, this.state);\n    const tabBarWidthPercent = `${routes.length * 40}%`;\n    const translateX = this.getTranslateX(\n      this.scrollAmount,\n      this.getMaxScrollDistance(tabBarWidth, layout.width)\n    );\n\n    return (\n      <Animated.View\n        onLayout={this.handleLayout}\n        style={[styles.tabBar, style]}\n      >\n        <Animated.View\n          pointerEvents=\"none\"\n          style={[\n            styles.indicatorContainer,\n            scrollEnabled ? { transform: [{ translateX }] as any } : null,\n            tabBarWidth\n              ? { width: tabBarWidth }\n              : scrollEnabled\n              ? { width: tabBarWidthPercent }\n              : null,\n            indicatorContainerStyle,\n          ]}\n        >\n          {this.props.renderIndicator({\n            position,\n            layout,\n            navigationState,\n            jumpTo,\n            width: isWidthDynamic ? 'auto' : `${100 / routes.length}%`,\n            style: indicatorStyle,\n            getTabWidth: this.getMemoizedTabWidthGettter(\n              layout,\n              routes,\n              scrollEnabled,\n              tabWidths,\n              this.getFlattenedTabWidth(tabStyle)\n            ),\n          })}\n        </Animated.View>\n        <View style={styles.scroll}>\n          <Animated.ScrollView\n            horizontal\n            accessibilityRole=\"tablist\"\n            keyboardShouldPersistTaps=\"handled\"\n            scrollEnabled={scrollEnabled}\n            bounces={bounces}\n            alwaysBounceHorizontal={false}\n            scrollsToTop={false}\n            showsHorizontalScrollIndicator={false}\n            automaticallyAdjustContentInsets={false}\n            overScrollMode=\"never\"\n            contentContainerStyle={[\n              styles.tabContent,\n              scrollEnabled\n                ? { width: tabBarWidth || tabBarWidthPercent }\n                : styles.container,\n              contentContainerStyle,\n            ]}\n            scrollEventThrottle={16}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { x: this.scrollAmount },\n                },\n              },\n            ])}\n            ref={this.scrollViewRef}\n          >\n            {routes.map((route: T) => {\n              const props: TabBarItemProps<T> & { key: string } = {\n                key: route.key,\n                position: position,\n                route: route,\n                navigationState: navigationState,\n                getAccessibilityLabel: getAccessibilityLabel,\n                getAccessible: getAccessible,\n                getLabelText: getLabelText,\n                getTestID: getTestID,\n                renderBadge: renderBadge,\n                renderIcon: renderIcon,\n                renderLabel: renderLabel,\n                activeColor: activeColor,\n                inactiveColor: inactiveColor,\n                pressColor: pressColor,\n                pressOpacity: pressOpacity,\n                onLayout: isWidthDynamic\n                  ? (e) => {\n                      this.measuredTabWidths[route.key] =\n                        e.nativeEvent.layout.width;\n\n                      // When we have measured widths for all of the tabs, we should updates the state\n                      // We avoid doing separate setState for each layout since it triggers multiple renders and slows down app\n                      if (\n                        routes.every(\n                          (r) =>\n                            typeof this.measuredTabWidths[r.key] === 'number'\n                        )\n                      ) {\n                        this.setState({\n                          tabWidths: { ...this.measuredTabWidths },\n                        });\n                      }\n                    }\n                  : undefined,\n                onPress: () => {\n                  const event: Scene<T> & Event = {\n                    route,\n                    defaultPrevented: false,\n                    preventDefault: () => {\n                      event.defaultPrevented = true;\n                    },\n                  };\n\n                  onTabPress?.(event);\n\n                  if (event.defaultPrevented) {\n                    return;\n                  }\n\n                  this.props.jumpTo(route.key);\n                },\n                onLongPress: () => onTabLongPress?.({ route }),\n                labelStyle: labelStyle,\n                style: tabStyle,\n              };\n\n              return renderTabBarItem ? (\n                renderTabBarItem(props)\n              ) : (\n                <TabBarItem {...props} />\n              );\n            })}\n          </Animated.ScrollView>\n        </View>\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scroll: {\n    overflow: Platform.select({ default: 'scroll', web: undefined }),\n  },\n  tabBar: {\n    backgroundColor: '#2196f3',\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOpacity: 0.1,\n    shadowRadius: StyleSheet.hairlineWidth,\n    shadowOffset: {\n      height: StyleSheet.hairlineWidth,\n      width: 0,\n    },\n    zIndex: 1,\n  },\n  tabContent: {\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n  indicatorContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]}