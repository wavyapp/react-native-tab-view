{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_TouchableItem","_interopRequireDefault","_reactNativeReanimated","_memoize","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","key","value","_toPropertyKey","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","AnimatedInterpolate","Animated","interpolateNode","interpolate","DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","TabBarItem","Component","constructor","args","memoize","position","routes","tabIndex","length","inputRange","map","_","outputRange","render","route","navigationState","renderLabel","renderLabelPassed","renderIcon","renderBadge","getLabelText","getTestID","getAccessibilityLabel","getAccessible","activeColor","inactiveColor","pressColor","pressOpacity","labelStyle","style","onLayout","onPress","onLongPress","props","indexOf","isFocused","index","activeOpacity","getActiveOpacity","inactiveOpacity","getInactiveOpacity","icon","label","activeIcon","focused","color","inactiveIcon","createElement","View","styles","opacity","StyleSheet","absoluteFill","undefined","labelText","Text","marginTop","activeLabel","inactiveLabel","tabStyle","flatten","isWidthSet","width","tabContainerStyle","flex","scene","accessibilityLabel","badge","borderless","testID","accessible","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","accessibilityStates","delayPressIn","pointerEvents","item","exports","create","margin","backgroundColor","alignItems","justifyContent","padding","minHeight","top","right"],"sources":["TabBarItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  LayoutChangeEvent,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport TouchableItem from './TouchableItem';\nimport { Scene, Route, NavigationState } from './types';\nimport Animated from 'react-native-reanimated';\nimport memoize from './memoize';\n\n// @ts-ignore\nconst AnimatedInterpolate = Animated.interpolateNode || Animated.interpolate;\n\nexport type Props<T extends Route> = {\n  position: Animated.Node<number>;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nexport default class TabBarItem<T extends Route> extends React.Component<\n  Props<T>\n> {\n  private getActiveOpacity = memoize(\n    (position: Animated.Node<number>, routes: Route[], tabIndex: number) => {\n      if (routes.length > 1) {\n        const inputRange = routes.map((_, i) => i);\n\n        return AnimatedInterpolate(position, {\n          inputRange,\n          outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n        });\n      } else {\n        return 1;\n      }\n    }\n  );\n\n  private getInactiveOpacity = memoize((position, routes, tabIndex) => {\n    if (routes.length > 1) {\n      const inputRange = routes.map((_: Route, i: number) => i);\n\n      return AnimatedInterpolate(position, {\n        inputRange,\n        outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n      });\n    } else {\n      return 0;\n    }\n  });\n\n  render() {\n    const {\n      route,\n      position,\n      navigationState,\n      renderLabel: renderLabelPassed,\n      renderIcon,\n      renderBadge,\n      getLabelText,\n      getTestID,\n      getAccessibilityLabel,\n      getAccessible,\n      activeColor = DEFAULT_ACTIVE_COLOR,\n      inactiveColor = DEFAULT_INACTIVE_COLOR,\n      pressColor,\n      pressOpacity,\n      labelStyle,\n      style,\n      onLayout,\n      onPress,\n      onLongPress,\n    } = this.props;\n\n    const tabIndex = navigationState.routes.indexOf(route);\n    const isFocused = navigationState.index === tabIndex;\n\n    const activeOpacity = this.getActiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n    const inactiveOpacity = this.getInactiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n\n    let icon: React.ReactNode | null = null;\n    let label: React.ReactNode | null = null;\n\n    if (renderIcon) {\n      const activeIcon = renderIcon({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveIcon = renderIcon({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      if (inactiveIcon != null && activeIcon != null) {\n        icon = (\n          <View style={styles.icon}>\n            <Animated.View style={{ opacity: inactiveOpacity }}>\n              {inactiveIcon}\n            </Animated.View>\n            <Animated.View\n              style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n            >\n              {activeIcon}\n            </Animated.View>\n          </View>\n        );\n      }\n    }\n\n    const renderLabel =\n      renderLabelPassed !== undefined\n        ? renderLabelPassed\n        : ({ route, color }: { route: T; color: string }) => {\n            const labelText = getLabelText({ route });\n\n            if (typeof labelText === 'string') {\n              return (\n                <Animated.Text\n                  style={[\n                    styles.label,\n                    icon ? { marginTop: 0 } : null,\n                    labelStyle,\n                    { color },\n                  ]}\n                >\n                  {labelText}\n                </Animated.Text>\n              );\n            }\n\n            return labelText;\n          };\n\n    if (renderLabel) {\n      const activeLabel = renderLabel({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveLabel = renderLabel({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      label = (\n        <View>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveLabel}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeLabel}\n          </Animated.View>\n        </View>\n      );\n    }\n\n    const tabStyle = StyleSheet.flatten(style);\n    const isWidthSet = tabStyle?.width !== undefined;\n    const tabContainerStyle: ViewStyle | null = isWidthSet ? null : { flex: 1 };\n\n    const scene = { route };\n\n    let accessibilityLabel = getAccessibilityLabel(scene);\n\n    accessibilityLabel =\n      typeof accessibilityLabel !== 'undefined'\n        ? accessibilityLabel\n        : getLabelText(scene);\n\n    const badge = renderBadge ? renderBadge(scene) : null;\n\n    return (\n      <TouchableItem\n        borderless\n        testID={getTestID(scene)}\n        accessible={getAccessible(scene)}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityTraits={isFocused ? ['button', 'selected'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"tab\"\n        accessibilityState={{ selected: isFocused }}\n        // @ts-ignore: this is to support older React Native versions\n        accessibilityStates={isFocused ? ['selected'] : []}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        delayPressIn={0}\n        onLayout={onLayout}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        style={tabContainerStyle}\n      >\n        <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n          {icon}\n          {label}\n          {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n        </View>\n      </TouchableItem>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n});\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAQA,IAAAE,cAAA,GAAAC,sBAAA,CAAAH,OAAA;AAEA,IAAAI,sBAAA,GAAAD,sBAAA,CAAAH,OAAA;AACA,IAAAK,QAAA,GAAAF,sBAAA,CAAAH,OAAA;AAAgC,SAAAG,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAX,wBAAAW,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAH,UAAA,SAAAG,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAF,OAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAC,GAAA,CAAAJ,CAAA,UAAAG,CAAA,CAAAE,GAAA,CAAAL,CAAA,OAAAM,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAZ,CAAA,oBAAAY,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAd,CAAA,EAAAY,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAX,CAAA,EAAAY,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAZ,CAAA,CAAAY,CAAA,YAAAN,CAAA,CAAAR,OAAA,GAAAE,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAa,GAAA,CAAAhB,CAAA,EAAAM,CAAA,GAAAA,CAAA;AAAA,SAAAW,gBAAArB,GAAA,EAAAsB,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAtB,GAAA,IAAAa,MAAA,CAAAC,cAAA,CAAAd,GAAA,EAAAsB,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAE,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAA3B,GAAA,CAAAsB,GAAA,IAAAC,KAAA,WAAAvB,GAAA;AAAA,SAAAwB,eAAAjB,CAAA,QAAAY,CAAA,GAAAS,YAAA,CAAArB,CAAA,uCAAAY,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAS,aAAArB,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAH,CAAA,GAAAG,CAAA,CAAAsB,MAAA,CAAAC,WAAA,kBAAA1B,CAAA,QAAAe,CAAA,GAAAf,CAAA,CAAAc,IAAA,CAAAX,CAAA,EAAAD,CAAA,uCAAAa,CAAA,SAAAA,CAAA,YAAAY,SAAA,yEAAAzB,CAAA,GAAA0B,MAAA,GAAAC,MAAA,EAAA1B,CAAA;AAEhC;AACA,MAAM2B,mBAAmB,GAAGC,8BAAQ,CAACC,eAAe,IAAID,8BAAQ,CAACE,WAAW;AAgC5E,MAAMC,oBAAoB,GAAG,wBAAwB;AACrD,MAAMC,sBAAsB,GAAG,0BAA0B;AAE1C,MAAMC,UAAU,SAA0BhD,KAAK,CAACiD,SAAS,CAEtE;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAtB,eAAA,2BAC2B,IAAAuB,gBAAO,EAChC,CAACC,QAA+B,EAAEC,MAAe,EAAEC,QAAgB,KAAK;MACtE,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;QACrB,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEhC,CAAC,KAAKA,CAAC,CAAC;QAE1C,OAAOe,mBAAmB,CAACW,QAAQ,EAAE;UACnCI,UAAU;UACVG,WAAW,EAAEH,UAAU,CAACC,GAAG,CAAE/B,CAAC,IAAMA,CAAC,KAAK4B,QAAQ,GAAG,CAAC,GAAG,CAAE;QAC7D,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,OAAO,CAAC;MACV;IACF,CACF,CAAC;IAAA1B,eAAA,6BAE4B,IAAAuB,gBAAO,EAAC,CAACC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,KAAK;MACnE,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;QACrB,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAG,CAAC,CAACC,CAAQ,EAAEhC,CAAS,KAAKA,CAAC,CAAC;QAEzD,OAAOe,mBAAmB,CAACW,QAAQ,EAAE;UACnCI,UAAU;UACVG,WAAW,EAAEH,UAAU,CAACC,GAAG,CAAE/B,CAAS,IAAMA,CAAC,KAAK4B,QAAQ,GAAG,CAAC,GAAG,CAAE;QACrE,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,OAAO,CAAC;MACV;IACF,CAAC,CAAC;EAAA;EAEFM,MAAMA,CAAA,EAAG;IACP,MAAM;MACJC,KAAK;MACLT,QAAQ;MACRU,eAAe;MACfC,WAAW,EAAEC,iBAAiB;MAC9BC,UAAU;MACVC,WAAW;MACXC,YAAY;MACZC,SAAS;MACTC,qBAAqB;MACrBC,aAAa;MACbC,WAAW,GAAG1B,oBAAoB;MAClC2B,aAAa,GAAG1B,sBAAsB;MACtC2B,UAAU;MACVC,YAAY;MACZC,UAAU;MACVC,KAAK;MACLC,QAAQ;MACRC,OAAO;MACPC;IACF,CAAC,GAAG,IAAI,CAACC,KAAK;IAEd,MAAM1B,QAAQ,GAAGQ,eAAe,CAACT,MAAM,CAAC4B,OAAO,CAACpB,KAAK,CAAC;IACtD,MAAMqB,SAAS,GAAGpB,eAAe,CAACqB,KAAK,KAAK7B,QAAQ;IAEpD,MAAM8B,aAAa,GAAG,IAAI,CAACC,gBAAgB,CACzCjC,QAAQ,EACRU,eAAe,CAACT,MAAM,EACtBC,QACF,CAAC;IACD,MAAMgC,eAAe,GAAG,IAAI,CAACC,kBAAkB,CAC7CnC,QAAQ,EACRU,eAAe,CAACT,MAAM,EACtBC,QACF,CAAC;IAED,IAAIkC,IAA4B,GAAG,IAAI;IACvC,IAAIC,KAA6B,GAAG,IAAI;IAExC,IAAIxB,UAAU,EAAE;MACd,MAAMyB,UAAU,GAAGzB,UAAU,CAAC;QAC5BJ,KAAK;QACL8B,OAAO,EAAE,IAAI;QACbC,KAAK,EAAErB;MACT,CAAC,CAAC;MACF,MAAMsB,YAAY,GAAG5B,UAAU,CAAC;QAC9BJ,KAAK;QACL8B,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEpB;MACT,CAAC,CAAC;MAEF,IAAIqB,YAAY,IAAI,IAAI,IAAIH,UAAU,IAAI,IAAI,EAAE;QAC9CF,IAAI,gBACFzF,KAAA,CAAA+F,aAAA,CAAC5F,YAAA,CAAA6F,IAAI;UAACnB,KAAK,EAAEoB,MAAM,CAACR;QAAK,gBACvBzF,KAAA,CAAA+F,aAAA,CAACzF,sBAAA,CAAAI,OAAQ,CAACsF,IAAI;UAACnB,KAAK,EAAE;YAAEqB,OAAO,EAAEX;UAAgB;QAAE,GAChDO,YACY,CAAC,eAChB9F,KAAA,CAAA+F,aAAA,CAACzF,sBAAA,CAAAI,OAAQ,CAACsF,IAAI;UACZnB,KAAK,EAAE,CAACsB,uBAAU,CAACC,YAAY,EAAE;YAAEF,OAAO,EAAEb;UAAc,CAAC;QAAE,GAE5DM,UACY,CACX,CACP;MACH;IACF;IAEA,MAAM3B,WAAW,GACfC,iBAAiB,KAAKoC,SAAS,GAC3BpC,iBAAiB,GACjB,CAAC;MAAEH,KAAK;MAAE+B;IAAmC,CAAC,KAAK;MACjD,MAAMS,SAAS,GAAGlC,YAAY,CAAC;QAAEN;MAAM,CAAC,CAAC;MAEzC,IAAI,OAAOwC,SAAS,KAAK,QAAQ,EAAE;QACjC,oBACEtG,KAAA,CAAA+F,aAAA,CAACzF,sBAAA,CAAAI,OAAQ,CAAC6F,IAAI;UACZ1B,KAAK,EAAE,CACLoB,MAAM,CAACP,KAAK,EACZD,IAAI,GAAG;YAAEe,SAAS,EAAE;UAAE,CAAC,GAAG,IAAI,EAC9B5B,UAAU,EACV;YAAEiB;UAAM,CAAC;QACT,GAEDS,SACY,CAAC;MAEpB;MAEA,OAAOA,SAAS;IAClB,CAAC;IAEP,IAAItC,WAAW,EAAE;MACf,MAAMyC,WAAW,GAAGzC,WAAW,CAAC;QAC9BF,KAAK;QACL8B,OAAO,EAAE,IAAI;QACbC,KAAK,EAAErB;MACT,CAAC,CAAC;MACF,MAAMkC,aAAa,GAAG1C,WAAW,CAAC;QAChCF,KAAK;QACL8B,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEpB;MACT,CAAC,CAAC;MAEFiB,KAAK,gBACH1F,KAAA,CAAA+F,aAAA,CAAC5F,YAAA,CAAA6F,IAAI,qBACHhG,KAAA,CAAA+F,aAAA,CAACzF,sBAAA,CAAAI,OAAQ,CAACsF,IAAI;QAACnB,KAAK,EAAE;UAAEqB,OAAO,EAAEX;QAAgB;MAAE,GAChDmB,aACY,CAAC,eAChB1G,KAAA,CAAA+F,aAAA,CAACzF,sBAAA,CAAAI,OAAQ,CAACsF,IAAI;QACZnB,KAAK,EAAE,CAACsB,uBAAU,CAACC,YAAY,EAAE;UAAEF,OAAO,EAAEb;QAAc,CAAC;MAAE,GAE5DoB,WACY,CACX,CACP;IACH;IAEA,MAAME,QAAQ,GAAGR,uBAAU,CAACS,OAAO,CAAC/B,KAAK,CAAC;IAC1C,MAAMgC,UAAU,GAAG,CAAAF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,KAAK,MAAKT,SAAS;IAChD,MAAMU,iBAAmC,GAAGF,UAAU,GAAG,IAAI,GAAG;MAAEG,IAAI,EAAE;IAAE,CAAC;IAE3E,MAAMC,KAAK,GAAG;MAAEnD;IAAM,CAAC;IAEvB,IAAIoD,kBAAkB,GAAG5C,qBAAqB,CAAC2C,KAAK,CAAC;IAErDC,kBAAkB,GAChB,OAAOA,kBAAkB,KAAK,WAAW,GACrCA,kBAAkB,GAClB9C,YAAY,CAAC6C,KAAK,CAAC;IAEzB,MAAME,KAAK,GAAGhD,WAAW,GAAGA,WAAW,CAAC8C,KAAK,CAAC,GAAG,IAAI;IAErD,oBACEjH,KAAA,CAAA+F,aAAA,CAAC3F,cAAA,CAAAM,OAAa;MACZ0G,UAAU;MACVC,MAAM,EAAEhD,SAAS,CAAC4C,KAAK,CAAE;MACzBK,UAAU,EAAE/C,aAAa,CAAC0C,KAAK,CAAE;MACjCC,kBAAkB,EAAEA,kBAAmB;MACvCK,mBAAmB,EAAEpC,SAAS,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,QAAS;MACnEqC,0BAA0B,EAAC,QAAQ;MACnCC,iBAAiB,EAAC,KAAK;MACvBC,kBAAkB,EAAE;QAAEC,QAAQ,EAAExC;MAAU;MAC1C;MAAA;MACAyC,mBAAmB,EAAEzC,SAAS,GAAG,CAAC,UAAU,CAAC,GAAG,EAAG;MACnDT,UAAU,EAAEA,UAAW;MACvBC,YAAY,EAAEA,YAAa;MAC3BkD,YAAY,EAAE,CAAE;MAChB/C,QAAQ,EAAEA,QAAS;MACnBC,OAAO,EAAEA,OAAQ;MACjBC,WAAW,EAAEA,WAAY;MACzBH,KAAK,EAAEkC;IAAkB,gBAEzB/G,KAAA,CAAA+F,aAAA,CAAC5F,YAAA,CAAA6F,IAAI;MAAC8B,aAAa,EAAC,MAAM;MAACjD,KAAK,EAAE,CAACoB,MAAM,CAAC8B,IAAI,EAAEpB,QAAQ;IAAE,GACvDlB,IAAI,EACJC,KAAK,EACLyB,KAAK,IAAI,IAAI,gBAAGnH,KAAA,CAAA+F,aAAA,CAAC5F,YAAA,CAAA6F,IAAI;MAACnB,KAAK,EAAEoB,MAAM,CAACkB;IAAM,GAAEA,KAAY,CAAC,GAAG,IACzD,CACO,CAAC;EAEpB;AACF;AAACa,OAAA,CAAAtH,OAAA,GAAAsC,UAAA;AAED,MAAMiD,MAAM,GAAGE,uBAAU,CAAC8B,MAAM,CAAC;EAC/BvC,KAAK,EAAE;IACLwC,MAAM,EAAE,CAAC;IACTC,eAAe,EAAE;EACnB,CAAC;EACD1C,IAAI,EAAE;IACJyC,MAAM,EAAE;EACV,CAAC;EACDH,IAAI,EAAE;IACJf,IAAI,EAAE,CAAC;IACPoB,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDpB,KAAK,EAAE;IACL9D,QAAQ,EAAE,UAAU;IACpBmF,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE;EACT;AACF,CAAC,CAAC","ignoreList":[]}