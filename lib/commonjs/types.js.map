{"version":3,"names":[],"sources":["types.tsx"],"sourcesContent":["import Animated from 'react-native-reanimated';\n\nexport type Route = {\n  key: string;\n  icon?: string;\n  title?: string;\n  accessible?: boolean;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\nexport type Event = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\nexport type Scene<T extends Route> = {\n  route: T;\n};\n\nexport type NavigationState<T extends Route> = {\n  index: number;\n  routes: T[];\n};\n\nexport type Layout = {\n  width: number;\n  height: number;\n};\n\nexport type Listener = (value: number) => void;\n\nexport type SceneRendererProps = {\n  layout: Layout;\n  position: Animated.Node<number>;\n  jumpTo: (key: string) => void;\n};\n\nexport type EventEmitterProps = {\n  addListener: (type: 'enter', listener: Listener) => void;\n  removeListener: (type: 'enter', listener: Listener) => void;\n};\n\nexport type PagerCommonProps = {\n  keyboardDismissMode: 'none' | 'on-drag' | 'auto';\n  swipeEnabled: boolean;\n  swipeVelocityImpact?: number;\n  onSwipeStart?: () => void;\n  onSwipeEnd?: () => void;\n  springVelocityScale?: number;\n  springConfig: {\n    damping?: number;\n    mass?: number;\n    stiffness?: number;\n    restSpeedThreshold?: number;\n    restDisplacementThreshold?: number;\n  };\n  timingConfig: {\n    duration?: number;\n  };\n};\n"],"mappings":"","ignoreList":[]}